Singleton Class in Java

A singleton class is a class that can have only one object (an instance of the class) at a time.

If The class is used to create two separate objects, the objects are essentially the same.
A change to one object will result in the same change being applied to the second object

To design a singleton class:

1.	Make constructor as private.
2.	Write a static method that has return type object of this singleton class. Here, the concept of Lazy initialization in used to write this static method.


Explanation :
In the Singleton class, when we first time call getInstance() method, 
it creates an object of the class with name single_instance and return it to the variable. 
Since single_instance is static, it is changed from null to some object. 
Next time, if we try to call getInstance() method, since single_instance is not null, it is returned to the variable, instead of instantiating the Singleton class again. 
This part is done by if condition.