Factory Design Pattern.

The factory method design pattern is one of the well-known “Gang of Four” (GoF) design patterns.
It is a creational design pattern that uses factory methods to deal with creating instances without specifying the exact class of the object that will be created.


Factory method is a creational design pattern, i.e., related to object creation. 
In Factory pattern, we create objects without exposing the creation logic to client and the client use the same common interface to create new type of object.
The idea is to use a static member-function (static factory method) which creates & returns instances, hiding the details of class modules from user.

This way we can separate the object classes from the application and the factory is the bridge between the two sets of code. 
The application doesn't need to know how the objects are created, it just has to call them.